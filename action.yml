name: Poetrel
description: Github Action for automatic releases with Poetry

inputs:
  changelog:
    description: The path to the Changelog file
    required: false
    default: CHANGELOG.md
  commit-prefix:
    description: The message to display before the version in the commit message
    required: false
    default: '[skip ci] Release '
  git-author:
    description: Value used for the commit author
    required: false
    default: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
  git-email:
    description: Email address used for the commit user
    required: false
    default: 41898282+github-actions[bot]@users.noreply.github.com
  git-user:
    description: Name used for the commit user
    required: false
    default: github-actions[bot]
  github-token:
    description: The repository token (secrets.GITHUB_TOKEN)
    required: true
  pypi-token:
    description: The PyPI API token if you want to publish to PyPI
    required: false
  setup-poetry:
    description: Whether Poetrel should setup Python and Poetry
    required: false
    default: 'true'

runs:
  using: composite
  steps:
    - name: Get pull request label
      id: get-label
      uses: corentin-regent/poetrel/get-label@v1
      with:
        github-token: ${{ inputs.github-token }}

    - name: Save release notes
      uses: corentin-regent/poetrel/save-notes@v1
      with:
        changelog: ${{ inputs.changelog }}
        notes-file: .notes.txt

    - name: Setup Python
      if: ${{ inputs.setup-poetry == 'true' }}
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: Install Poetry
      if: ${{ inputs.setup-poetry == 'true' }}
      uses: snok/install-poetry@v1

    - name: Bump project version
      if: ${{ steps.get-label.outputs.action != 'no-bump' }}
      shell: bash
      run: poetry version "${{ steps.get-label.outputs.action }}"

    - name: Get new project version
      id: get-version
      shell: bash
      run: echo "new-version=$(poetry version -s)" >> $GITHUB_OUTPUT

    - name: Write new version to Changelog
      uses: corentin-regent/poetrel/write-version@v1
      with:
        changelog: ${{ inputs.changelog }}
        version: ${{ steps.get-version.outputs.new-version }}

    - name: Commit changes
      shell: bash
      env:
        commit-message: ${{ inputs.commit-prefix }}${{ steps.get-version.outputs.new-version }}
      run: |
        git config user.name "${{ inputs.git-user }}"
        git config user.email "${{ inputs.git-email }}"
        git add "${{ inputs.changelog }}" pyproject.toml
        git commit -m "${{ env.commit-message }}" --author "${{ inputs.git-author }}"
        git push

    - name: Publish to PyPI
      if: inputs.pypi-token
      shell: bash
      run: |
        poetry config pypi-token.pypi "${{ inputs.pypi-token }}"
        poetry publish --build --no-interaction

    - name: Create a GitHub release
      uses: corentin-regent/poetrel/release@v1
      with:
        version: ${{ steps.get-version.outputs.new-version }}
        notes-file: .notes.txt
        github-token: ${{ inputs.github-token }}

branding:
  icon: chevrons-up
  color: blue
